{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  "plugins": ["typescript", "import", "jsx-a11y", "react", "unicorn"],
  "categories": {
    "correctness": "off"
  },
  "env": {
    "builtin": true,
    "es2021": true,
    "commonjs": true
  },
  "ignorePatterns": [
    ".cache",
    ".idea",
    ".next",
    ".turbo",
    ".vscode",
    ".yalc",
    "!.*.js",
    "**/.turbo/*",
    "**/build/*",
    "**/coverage/*",
    "**/dist/*",
    "**/integration/templates/**/*",
    "**/node_modules/**",
    "*.snap",
    "commitlint.config.ts",
    "packages/*/dist/**",
    "packages/*/examples",
    "playground/*",
    "pnpm-lock.json",
    "eslint.config.mjs",
    "typedoc.config.mjs",
    "vitest.workspace.mjs",
    "packages/*/jest.config.js",
    "packages/astro/src/astro-components/**/*.ts",
    "packages/backend/src/runtime/**/*",
    "packages/clerk-js/rspack.config.js",
    "packages/shared/src/compiled/path-to-regexp/index.js"
  ],
  "rules": {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-import-assign": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-new-native-nonconstructor": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-obj-calls": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-self-assign": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-this-before-super": "error",
    "no-unexpected-multiline": "off",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true,
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "no-useless-backreference": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-with": "error",
    "require-yield": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "@typescript-eslint/ban-ts-comment": [
      "warn",
      {
        "ts-ignore": "allow-with-description",
        "ts-expect-error": "allow-with-description",
        "ts-check": "allow-with-description"
      }
    ],
    "no-array-constructor": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "off",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "no-unused-expressions": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "no-throw-literal": "off",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "prefer-promise-reject-errors": "off",
    "require-await": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "import/namespace": "error",
    "import/default": "error",
    "import/no-named-as-default": "warn",
    "import/no-named-as-default-member": "warn",
    "import/no-duplicates": "warn",
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/anchor-ambiguous-text": "off",
    "jsx-a11y/anchor-has-content": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/aria-activedescendant-has-tabindex": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-role": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/autocomplete-valid": "error",
    "jsx-a11y/click-events-have-key-events": "error",
    "jsx-a11y/heading-has-content": "error",
    "jsx-a11y/html-has-lang": "warn",
    "jsx-a11y/iframe-has-title": "error",
    "jsx-a11y/img-redundant-alt": "error",
    "jsx-a11y/label-has-associated-control": "error",
    "jsx-a11y/media-has-caption": "error",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/no-access-key": "error",
    "jsx-a11y/no-autofocus": "warn",
    "jsx-a11y/no-distracting-elements": "error",
    "jsx-a11y/no-noninteractive-tabindex": [
      "error",
      {
        "tags": [],
        "roles": ["tabpanel"],
        "allowExpressionValues": true
      }
    ],
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/scope": "error",
    "jsx-a11y/tabindex-no-positive": "error",
    "react/jsx-key": "warn",
    "react/jsx-no-comment-textnodes": "warn",
    "react/jsx-no-duplicate-props": "warn",
    "react/jsx-no-target-blank": [
      "error",
      {
        "allowReferrer": true
      }
    ],
    "react/jsx-no-undef": "warn",
    "react/no-children-prop": "warn",
    "react/no-danger-with-children": "warn",
    "react/no-direct-mutation-state": "warn",
    "react/no-find-dom-node": "warn",
    "react/no-is-mounted": "warn",
    "react/no-render-return-value": "warn",
    "react/no-string-refs": "warn",
    "react/no-unescaped-entities": "warn",
    "react/no-unknown-property": [
      "error",
      {
        "ignore": ["css"]
      }
    ],
    "react/react-in-jsx-scope": "off",
    "curly": "off",
    "no-label-var": "error",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "message": "Please always import from '@clerk/shared/<module>' instead of '@clerk/shared'.",
            "name": "@clerk/shared"
          }
        ],
        "patterns": [
          {
            "group": ["!@clerk/shared/*"],
            "message": "ignore this line -- eslint matching workaround to allow all imports except @clerk/shared"
          },
          {
            "group": ["@emotion/*"],
            "message": "Please do not import emotion directly. Import helpers from ./design-system or ./primitives instead."
          }
        ]
      }
    ],
    "react/button-has-type": "warn",
    "react/jsx-boolean-value": "warn",
    "react/jsx-curly-brace-presence": "off",
    "react/jsx-no-useless-fragment": "warn",
    "react/no-array-index-key": "warn",
    "react/self-closing-comp": "warn",
    "sort-imports": "off",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": true,
        "fixStyle": "separate-type-imports"
      }
    ],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "unicorn/empty-brace-spaces": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/number-literal-case": "off"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"],
      "rules": {
        "no-class-assign": "off",
        "no-const-assign": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-native-nonconstructor": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-unsafe-negation": "off",
        "no-var": "error",
        "no-with": "off",
        "prefer-rest-params": "error",
        "prefer-spread": "error"
      }
    },
    {
      "files": ["**/*.cjs", "**/*.js", "**/*.jsx", "**/*.mjs"],
      "rules": {
        "no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true,
            "vars": "all",
            "varsIgnorePattern": "^_"
          }
        ]
      }
    },
    {
      "files": ["**/*.cts", "**/*.mts", "**/*.ts", "**/*.tsx"],
      "env": {
        "es2018": true
      }
    },
    {
      "files": ["**/*.cts", "**/*.mts", "**/*.ts", "**/*.tsx"],
      "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/no-non-null-assertion": "error"
      }
    },
    {
      "files": ["**/*.test.js", "**/*.test.jsx", "**/*.test.ts", "**/*.test.tsx", "**/test/**", "**/__tests__/**"],
      "env": {
        "jest": true
      }
    },
    {
      "files": ["packages/expo-passkeys/src/**/*"],
      "rules": {
        "no-restricted-imports": [
          "error",
          {
            "patterns": ["node:*"]
          }
        ]
      }
    },
    {
      "files": ["packages/upgrade/src/**/*"],
      "rules": {
        "react/no-unescaped-entities": "off"
      }
    },
    {
      "files": ["integration/tests/**"],
      "rules": {
        "no-empty-pattern": "off"
      },
      "globals": {
        "AbortController": "readonly",
        "AbortSignal": "readonly",
        "atob": "readonly",
        "Blob": "readonly",
        "BroadcastChannel": "readonly",
        "btoa": "readonly",
        "ByteLengthQueuingStrategy": "readonly",
        "clearInterval": "readonly",
        "clearTimeout": "readonly",
        "CompressionStream": "readonly",
        "console": "readonly",
        "CountQueuingStrategy": "readonly",
        "crypto": "readonly",
        "Crypto": "readonly",
        "CryptoKey": "readonly",
        "CustomEvent": "readonly",
        "DecompressionStream": "readonly",
        "DOMException": "readonly",
        "Event": "readonly",
        "EventTarget": "readonly",
        "fetch": "readonly",
        "File": "readonly",
        "FormData": "readonly",
        "Headers": "readonly",
        "Intl": "readonly",
        "MessageChannel": "readonly",
        "MessageEvent": "readonly",
        "MessagePort": "readonly",
        "performance": "readonly",
        "PerformanceEntry": "readonly",
        "PerformanceMark": "readonly",
        "PerformanceMeasure": "readonly",
        "PerformanceObserver": "readonly",
        "PerformanceObserverEntryList": "readonly",
        "PerformanceResourceTiming": "readonly",
        "queueMicrotask": "readonly",
        "ReadableByteStreamController": "readonly",
        "ReadableStream": "readonly",
        "ReadableStreamBYOBReader": "readonly",
        "ReadableStreamBYOBRequest": "readonly",
        "ReadableStreamDefaultController": "readonly",
        "ReadableStreamDefaultReader": "readonly",
        "Request": "readonly",
        "Response": "readonly",
        "setInterval": "readonly",
        "setTimeout": "readonly",
        "structuredClone": "readonly",
        "SubtleCrypto": "readonly",
        "TextDecoder": "readonly",
        "TextDecoderStream": "readonly",
        "TextEncoder": "readonly",
        "TextEncoderStream": "readonly",
        "TransformStream": "readonly",
        "TransformStreamDefaultController": "readonly",
        "URL": "readonly",
        "URLSearchParams": "readonly",
        "WebAssembly": "readonly",
        "WritableStream": "readonly",
        "WritableStreamDefaultController": "readonly",
        "WritableStreamDefaultWriter": "readonly"
      }
    },
    {
      "files": ["packages/shared/src/**/*.{ts,tsx}"],
      "rules": {
        "jsdoc/check-access": "warn",
        "jsdoc/check-property-names": "warn",
        "jsdoc/check-tag-names": [
          "warn",
          {
            "definedTags": ["inline", "unionReturnHeadings", "displayFunctionSignature", "paramExtension"],
            "typed": false
          }
        ],
        "jsdoc/empty-tags": "warn",
        "jsdoc/implements-on-classes": "warn",
        "jsdoc/no-defaults": "warn",
        "jsdoc/require-param": [
          "warn",
          {
            "ignoreWhenAllParamsMissing": true
          }
        ],
        "jsdoc/require-param-description": "warn",
        "jsdoc/require-param-name": "warn",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-property": "warn",
        "jsdoc/require-property-description": "warn",
        "jsdoc/require-property-name": "warn",
        "jsdoc/require-property-type": "off",
        "jsdoc/require-returns": "off",
        "jsdoc/require-returns-description": "warn",
        "jsdoc/require-returns-type": "off",
        "jsdoc/require-yields": "warn"
      },
      "plugins": ["jsdoc"]
    },
    {
      "files": ["*.yaml", "**/*.yaml", "*.yml", "**/*.yml"],
      "rules": {
        "no-irregular-whitespace": "off",
        "no-unused-vars": "off"
      }
    },
    {
      "files": ["packages/shared/src/compiled/path-to-regexp/index.js"],
      "rules": {
        "no-unused-expressions": "off"
      }
    }
  ]
}
