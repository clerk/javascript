
name: Setup Action
description: Checkout, setup node and dependencies
inputs:
  node-version:
    description: 'The node version to use'
    required: false
    default: '18'
  playwright-enabled:
    description: 'Enable Playwright?'
    required: false
    default: 'false'
  turbo-summarize:
    description: 'The token to use for Turbo task summaries'
    required: false
    default: 'false'
  turbo-enabled:
    description: 'Enable Turbo?'
    required: false
    default: 'true'
  turbo-cache-dir:
    description: 'The cache dir to use for Turbo'
    required: false
    default: './.turbo-cache'
  turbo-signature:
    description: 'The signature to use for Turbo'
    required: false
  turbo-remote-only:
    description: 'Only use remote cache?'
    required: false
    default: 'true'
  turbo-team:
    description: 'The team to use for Turbo remote auth'
    required: true
  turbo-token:
    description: 'The token to use for Turbo remote auth'
    required: true
  registry-url:
    description: 'The registry the packages will be published to'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Configure Turborepo
      id: turbo
      uses: actions/github-script@v6
      env:
        # envs are required to pass inputs to the script
        ENABLED: ${{ inputs.turbo-enabled }}
        CACHE_DIR: ${{ inputs.turbo-cache-dir }}
        REMOTE_ONLY: ${{ inputs.turbo-remote-only }}
        SIGNATURE: ${{ inputs.turbo-signature }}
        SUMMARIZE: ${{ inputs.turbo-summarize }}
        TEAM: ${{ inputs.turbo-team }}
        TOKEN: ${{ inputs.turbo-token }}
      with:
        script: |
          const os = require('os')
          const cpus =
            typeof os.availableParallelism === "function"
              ? os.availableParallelism()
              : os.cpus().length;

          const { ENABLED, CACHE_DIR, SIGNATURE, REMOTE_ONLY, SUMMARIZE, TEAM, TOKEN } = process.env

          core.exportVariable('TURBO_ARGS',
            [
              '--output-logs=new-only',
              `--cache-dir=${CACHE_DIR}`,
              `--concurrency=${cpus}`,
              `--summarize=${SUMMARIZE}`,
            ].join(' ')
          )

          if (ENABLED === 'true') {
            core.exportVariable('TURBO_TEAM', TEAM)
            core.exportVariable('TURBO_TOKEN', TOKEN)
            core.exportVariable('TURBO_REMOTE_ONLY', REMOTE_ONLY)
          }

          if (SIGNATURE && SIGNATURE !== '') {
            core.exportVariable('TURBO_REMOTE_CACHE_SIGNATURE_KEY', SIGNATURE)
          }

          core.exportVariable('FORCE_COLOR', '1')

    - name: Turborepo CLI Args
      shell: bash
      run: echo $TURBO_ARGS

    - name: Setup NodeJS ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        cache: 'npm'
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}

    - name: Install NPM Dependencies
      run: npm ci --audit=false --fund=false --prefer-offline
      shell: bash

    - name: Get Playwright Version
      if: inputs.playwright-enabled == 'true'
      shell: bash
      id: playwright-version
      run: echo "VERSION=$(node -e "console.log($(npm ls @playwright/test --json).dependencies['@playwright/test'].version)")" >> "$GITHUB_OUTPUT"

    - name: Cache Playwright Binaries
      if: inputs.playwright-enabled == 'true'
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-playwright-${{ steps.playwright-version.outputs.VERSION }}-v2

    - name: Install Playwright Browsers
      if: inputs.playwright-enabled == 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        npx playwright install chromium
        npx playwright install webkit
