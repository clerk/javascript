name: Publish alpha of @clerk/elements

on:
  workflow_dispatch:

env:
  PACKAGE_NAME: '@clerk/elements'
  PACKAGE_TAG: 'alpha'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  alpha-clerk-elements:
    if: ${{ github.repository == 'clerk/javascript' }}
    runs-on: ${{ vars.RUNNER_NORMAL }}
    timeout-minutes: ${{ fromJSON(vars.TIMEOUT_MINUTES_NORMAL) }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    permissions:
      contents: write
      id-token: write
      actions: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CLERK_COOKIE_PAT }}
          ref: main # Checkout main branch (to build from and push to)

      - name: Setup
        id: config
        uses: ./.github/actions/init
        with:
          turbo-signature: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}
          turbo-team: ${{ vars.TURBO_TEAM }}
          turbo-token: ${{ secrets.TURBO_TOKEN }}
          registry-url: "https://registry.npmjs.org"
      
      - name: Git configuration
        run: |
          git config --global user.name "Clerk Cookie"
          git config --global user.email "clerk-cookie@users.noreply.github.com"

      - name: Version package
        id: version-package
        uses: ./.github/actions/version-prepatch
        with:
          package: ${{ env.PACKAGE_NAME }}
          tag: ${{ env.PACKAGE_TAG }}

      - name: Build release
        run: npx turbo build $TURBO_ARGS

      - name: Publish to NPM
        run: npm publish --workspace=$PACKAGE_NAME --tag=$PACKAGE_TAG --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
      
      - name: Commit changes
        run: |
          git add --all
          git commit -m "chore(repo): Publish alpha of $PACKAGE_NAME" --no-verify
      
      - name: Push changes
        run: git push origin main --dry-run
